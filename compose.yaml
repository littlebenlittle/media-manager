services:
  trunk:
    build: ./trunk
    command: [ "trunk", "build", "--release" ]
    network_mode: host
    working_dir: /ui
    environment:
    - CARGO_TARGET_DIR=/target
    volumes:
    - ./ui:/ui:rw
    - rust-cache:/target:rw
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    volumes:
    - config:/config:rw
    - complete:/downloads/complete:rw
    - incomplete:/downloads/incomplete:rw
  api:
    build:
      context: ./service
      dockerfile: Containerfile.dev
    working_dir: /service
    volumes:
    - ./service:/service:rw
    - complete:/mkv:ro
    - webm:/webm:rw
    - gopath:/go:rw
    - gocache:/root/.cache/go:rw
  nginx:
    image: docker.io/library/nginx:latest
    ports:
    - 8080:80
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    - ./ui/dist:/www/data:ro
    - complete:/www/media/mkv:ro
    - webm:/www/media/webm:ro
    depends_on:
    - api
    - transmission

volumes:
  gopath: {}
  gocache: {}
  config: {}
  complete: {}
  incomplete: {}
  webm: {}
  rust-cache: {}
