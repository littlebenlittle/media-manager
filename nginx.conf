worker_processes  auto;
user              www-data;

events {
    use epoll;
    worker_connections  16;
}

http {
    include mime.types;
    server {
        listen 80;
        root   /www/data;

        location / {
            alias /www/data/;
            try_files $uri @index;
        }

        location @index {
            add_header Cache-Control no-cache;
            expires 0;
            try_files /index.html =404;
        }

        # location /files {
        #     proxy_pass http://tusd:1080;

        #     proxy_request_buffering  off;
        #     proxy_buffering          off;
        #     proxy_http_version       1.1;

        #     proxy_set_header X-Forwarded-Host  $http_host;
        #     proxy_set_header X-Forwarded-Proto $http_scheme;

        #     proxy_set_header         Upgrade $http_upgrade;
        #     proxy_set_header         Connection "upgrade";
        #     client_max_body_size     0;

        #     proxy_hide_header Access-Control-Allow-Origin;
        #     add_header Access-Control-Allow-Origin * always;
        # }

        location /downloads/ {
            sendfile  on;
            alias     /www/media/;
            try_files $uri =404;
        }

        location /api/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Content-Length' 0;
                # add_header 'Content-Type' 'text/plain; charset=utf-8';
                return 204;
            }
            # http_host can be a security issue for some apps, but in this
            # case all you could do is make your own browser use the wrong
            # URL
            proxy_set_header Host   $http_host;
            proxy_set_header Scheme $http_scheme;
            proxy_pass http://api:8080/;
        }

        location ~ /api/(media|jobs)/subscribe {
            # proxy_pass http://api:8080/events;
            # add_header 'Access-Control-Allow-Origin' '*' always;
            proxy_http_version 1.1;
            proxy_read_timeout 300s;
            ### Client should send correct headers
            # proxy_set_header Connection '';
            ### API should send correct headers
            # add_header Connection 'keep-alive';
            # chunked_transfer_encoding off;
            # proxy_buffering     off;
            # proxy_cache         off;
        }

        # location /transmission {
        #     proxy_pass http://transmission:9091/transmission;
        # }
    }
}
